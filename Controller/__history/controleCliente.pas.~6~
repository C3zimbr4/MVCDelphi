unit controleCliente;

interface

uses
  classeCliente;

type
  TControleCliente = class
  private
    // função privada para validar o CPF do cliente
    function ValidarUF(UF: string): boolean;
  public
    // procedimento para salvar o cliente
    function Salvar(const objetoCliente: TCliente): string;
  end;

implementation

uses
  StrUtils, SysUtils;

{ TControleCliente }

function TControleCliente.Salvar(const objetoCliente: TCliente): string;
 var retorno: string;
begin
  retorno := '';
  if objetoCliente.Codigo <= 0 then
    retorno := 'Preencha o código do cliente.';

  if objetoCliente.Nome= '' then
    retorno := 'Preencha o nome do cliente.';

  if not (ValidarUF(objetoCliente.UF)) then
    retorno := 'UF inválida!';

  // se o objeto for válido, o método Salvar é invocado
  objetoCliente.Salvar(objetoCliente);
end;



function TControleCliente.ValidarUF(UF: string): boolean;
const
Estados = 'SPMGRJRSSCPRESDFMTMSGOTOBASEALPBPEMARNCEPIPAAMAPFNACRRRO';
var
Posicao : integer;
begin
  Result := true;
  if UF <> '' then begin
     Posicao := Pos(UpperCase(UF), Estados);
  end;
  if (Posicao = 0) or ((Posicao mod 2) = 0) then begin
     Result := false;
  end;
end;

end.
